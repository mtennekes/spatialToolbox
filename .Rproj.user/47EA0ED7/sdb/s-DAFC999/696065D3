{
    "contents" : "#' Get ranges of the polygons\n#' \n#' Get the ranges of the polyons in the current projection. Also the total range of the shape object is returned.\n#' \n#' @param shp shape object, i.e. a \\code{\\link[sp:SpatialPolygonsDataFrame]{SpatialPolygons(DataFrame)}}\n#' @param key variable name in the shape data that identifies the polygons. If not specified, the default ID is used (see \\code{\\link[tmap:get_IDs]{get_IDs}}).\n#' @return List containing a data.frame of ranges per polygon, and a range vector of the total shape object.\n#' @export\nget_polygon_ranges <- function(shp, key=NULL) {\n\tco <- lapply(shp@polygons, function(p) {\n\t\tco2 <- lapply(p@Polygons, function(pp) pp@coords)\n\t\tco2all <- do.call(\"rbind\", co2)\n\t\tc(range(co2all[,1]), range(co2all[,2]))\n\t})\n\t\n\tlbs <- if (missing(key))  {\n\t\tget_IDs(shp)\n\t} else {\n\t\tstopifnot(key %in% names(shp))\n\t\tas.character(shp[[key]])\n\t}\n\trng_dat <- as.data.frame(matrix(unlist(co), ncol=4, byrow=TRUE, dimnames=list(lbs, c(\"xmin\", \"xmax\", \"ymin\", \"ymax\"))))\n\trng <- c(xmin=min(rng_dat[[1]]),\n\t\t\t xmax=max(rng_dat[[2]]),\n\t\t\t ymin=min(rng_dat[[3]]),\n\t\t\t ymax=max(rng_dat[[4]]))\n\tlist(polygon.ranges=rng_dat,\n\t\t total.range=rng)\n}\n",
    "created" : 1431096670613.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4101242180",
    "id" : "696065D3",
    "lastKnownWriteTime" : 1431096716,
    "path" : "D:/tijn/rdevel/spatialToolbox/pkg/R/get_polygon_ranges.R",
    "project_path" : "pkg/R/get_polygon_ranges.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}